'''
Created on 18.5.2014

@author: Morzeux
'''
import math

def generate_pentagonal(num):
    """ Generates pentagonal number. """
    return num * (3 * num - 1) / 2

def evaluate(fst, sec, pentagonals):
    """ Evaluates if numbers are pentagonal. """
    if fst + sec in pentagonals and int(math.fabs(fst - sec)) in pentagonals:
        return True
    else:
        return False

def problem(num=10000):
    """
    Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first
    ten pentagonal numbers are:

        1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

    It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
    70 - 22 = 48, is not pentagonal.

    Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
    difference are pentagonal and D = |Pk - Pj| is minimised; what is the
    value of D?
    """
    pentagonals = [generate_pentagonal(i) for i in range(1, num * 2)]
    set_pent = set(pentagonals)

    for i in pentagonals[:int(len(pentagonals)/2 + 1)]:
        for j in pentagonals[:int(len(pentagonals)/2 + 1)]:
            if evaluate(i, j, set_pent):
                return int(math.fabs(i - j))

    return None
